/*
 * Copyright Â© 2013 Fabian Schuiki.
 * An implementation for the String type.
 */

/** The basic string type. */
type String
{
	var $const char* cstr;
}

/** Converts the String to a const char* C string. */
func cstr (String s) -> ($const char* r)
{
	r = s.cstr;
}

/** Used internally to convert a const char* C string to a Maxwell String. */
func _makeString ($const char* s) -> (String r)
{
	r = new String;
	r.cstr = s;
}

/** Concatenates the two strings. */
func concatenate (String s1, String s2) -> (String r)
{
	var int l1 = strlen(s1.cstr);
	var int l2 = strlen(s2.cstr);
	var int totalLength = l1 + l2;

	var $char* tmp = ($char*)malloc(totalLength + 1);
	strcpy(tmp, cstr(s1));
	strcpy(($char*)(($long)tmp + ($long)l1), cstr(s2));
	tmp[totalLength] = 0;

	r = new String;
	r.cstr = ($const char*)tmp;
}

/** Returns the length of a string. */
func length (String s) -> (int l)
{
	l = strlen(s.cstr());
}

external "string.h" {
	func strlen ($const char* s) -> (int r);
	func strcpy ($char* dst, $const char* src);
}

external "stdlib.h" {
	func malloc (int size) -> ($void* memory);
}