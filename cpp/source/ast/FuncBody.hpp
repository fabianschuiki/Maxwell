/* Automatically generated by ast-gen. DO NOT MODIFY. */
#pragma once
#include "Node.hpp"
#include <vector>
#include <string>
#include <boost/smart_ptr.hpp>
#include <stdexcept>

namespace ast {

using std::vector;
using std::string;
using boost::shared_ptr;
using std::runtime_error;

class FuncBody : public Node
{
public:
	FuncBody() : Node() {}

	virtual bool isKindOf(Kind k)
	{
		if (Node::isKindOf(k)) return true;
		return k == kFuncBody;
	}

protected:
};

} // namespace ast