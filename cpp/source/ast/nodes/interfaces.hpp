/* Automatically generated by ast-gen. DO NOT MODIFY. */
#pragma once
#include <boost/function.hpp>

namespace ast {

class GraphInterface
{
public:
	virtual Node* getNode() = 0;

	virtual void setGraphPrev(const NodePtr& v) = 0;
	virtual const NodePtr& getGraphPrev() = 0;
};
template <typename T> class GraphInterfaceImpl : public GraphInterface
{
public:
	Node* getNode() { return node; }
	GraphInterfaceImpl(T* node) : node(node) {}

	const NodePtr& getGraphPrev() { return node->getGraphPrev(); }
	void setGraphPrev(const NodePtr& v) { node->setGraphPrev(v); }

protected:
	T* const node;
};

} // namespace ast
